[package]
name = "stm32f4-04-neopixel-spi"
version = "0.1.0"
authors = ["Greg Woods <gregwoodslancs@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
embedded-hal = "*"
nb = "*"
cortex-m = "*"
cortex-m-rt = "*"
cortex-m-semihosting = "*"
# Panic behaviour, see https://crates.io/keywords/panic-impl for alternatives
panic-halt = "*"
panic-semihosting = "*"

smart-leds = "*"
ws2812-spi = "*"
#{ version = "*", path="../ws2812-spi-rs" }


# use my fork, which clears the OVR status before each write
[dependencies.stm32f4xx-hal]
version = "*"
git = "https://github.com/GregWoods/stm32f4xx-hal"
features = ["rt", "stm32f411"]



#  https://doc.rust-lang.org/cargo/reference/profiles.html
#  Test and bench profile not currently used by me

[profile.dev]
opt-level = 3
debug = true
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'    # or 'abort'
incremental = true
codegen-units = 16  # Note: ignored because `incremental` is enabled.
rpath = false


[profile.release]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = false
panic = 'unwind'    # or 'abort'
incremental = false # false is needed to allow codegen-units = 1
codegen-units = 1   # default was 16. Changed to 1 to allow creating a single disassembly file using -- --emit asm
rpath = false